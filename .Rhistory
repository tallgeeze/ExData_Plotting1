abline(v= median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(region)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg[1], col="wheat", main = "Number of Counties in Each Region" )
barplot(reg, col="wheat", main = "Number of Counties in Each Region" )
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4,4,2,1))
east <- subset(pollution,region = "east" )
east <- subset(pollution,region == "east" )
head(east)
hsit(east, col = "green")
hist(east, col = "green")
hist(east$pm25, col = "green")
hist(subset(pollution, region=="west")$pm2.5, col = "green")
hist(subset(pollution, region=="west")$pm25, col = "green")
with(pollution,plot(latitude~pm25))
with(pollution,plot(latitude,pm25))
abline(h=12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1, 2), mar = c(5,
| 4, 2, 1))
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main="West")
plot(west$latitude, west$pm25, main="East")
plot(east$latitude, east$pm25, main="East")
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
?Devices
d
faithful
with(faithful, plot(eruptions, waiting))
title(main ="Old Faithful Geyser data")
dev.cur()
pdf(file =""myplot.pdf)
pdf(file =myplot.pdf")
pdf(file ="myplot.pdf")
title(main ="Old Faithful Geyser data")
with(faithful, plot(eruptions, waiting))
title(main ="Old Faithful Geyser data")
dev.cur
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(device = "png", file = "geyserplot.png")
dev.copy(device = png, file = "geyserplot.png")
dev.close()
dev.off()
head(cars)
with(cars, plot(spped, dist))
with(cars, plot(speed, dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income,state,c(4,1))
xyplot(Life.Exp~Income|region,state,c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, mpg)
skip()
head(airquality)
range(airquality$Ozone, na.rm= T)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
box(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone(ppb)", col.axis = "blue", col.lab ="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)",col.axis="blue",col.lab="red")
skip()
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
par( )
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, airquality$Month ==5)
may <- subset(airquality, Month ==5)
points(wind, ozone,col = "blue", pch = 1)
points()
points(may, col = "blue", lty = "solid")
points(may$Wind,may$Ozone , col = "blue", pch = 17)
notmay <- subset(airquality, Month !=5)
points(notmay$Wind, notmay$Ozone, col ="red", pch = 16)
points(notmay$Wind, notmay$Ozone, col ="red", pch = 8)
legend("topright", c(17,8), c("blue", ""red), c("May", "Other Months") )
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
lines(x = airquality$Wind, lty = 2)
abline( v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
.
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
title(main = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot( airquality$Temp, airquality$Ozone,main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
damn bro
###Welcome to my assignment###
###thank u for reviewing###
R.version()
library(dplyr)
library(tidyr)
library(lubridate)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
converted_data <- mutate(df_data, time = as.POSIXct( strptime(Time,format =("%H:%M:%S"))), date = as.Date.character(x= df_data$Date, format="%d/%m/%y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(converted_data)
View(data_base)
View(df_data)
R.version()
library(dplyr)
library(tidyr)
library(lubridate)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(df_data)
?as.Date
trail <- as.Date("28-12-1997", format= "%d-%m-%y")
trail <- as.Date("28-12-1997", format= "%dd-%mm-%yyyy")
trail <- as.Date("28-12-1997", format= "%d-%m-%y")
trail <- as.Date("28:12:1997", format= "%d:%m:%y")
View(trail)
trail <- as.Date("28:12:2020", format= "%d:%m:%y")
trail <- as.Date("28:12:1900", format= "%d:%m:%y")
trail <- as.Date("28:12:1900", format= "%d:%m:%Y")
trail <- as.Date("28:12:1900", format= "%D:%M:%Y")
trail <- as.Date("28:12:1900", format= "%d:%m:%Y")
converted_data <- mutate(df_data, time = as.POSIXct( strptime(Time,format =("%H:%M:%S"))), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###Welcome to my assignment###
###thank u for reviewing###
R.version()
library(dplyr)
library(tidyr)
library(lubridate)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
converted_data <- mutate(df_data, time = as.POSIXct( strptime(Time,format =("%H:%M:%S"))), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(data_base)
View(df_data)
converted_data <- mutate(df_data, time = as.POSIXct( strptime(Time,format =("%h:%m:%s"))), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(data_base)
?strptime
converted_data <- mutate(df_data, time = as.POSIXct( strptime(Time)), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
converted_data <- mutate(df_data, time = as.POSIXct( strptime(Time),format =("%H:%M:%S")), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(data_base)
converted_data <- mutate(df_data, time = as.POSIXct( strptime(Time,format =("%H:%M:%S"))), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(data_base)
converted_data <- mutate(df_data, time =  strptime(Time,format =("%H:%M:%S")), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(data_base)
converted_data <- mutate(df_data, time =  strptime(Time,format =("%H:%M:%S"),tz = ""), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(data_base)
View(data_base)
?strptimie
R.version()
library(dplyr)
library(tidyr)
library(lubridate)
?strptime
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
converted_data <- mutate(df_data, time =  as.POSIXct(strptime(Time,format =("%T%H:%M:%S"))), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
library(dplyr)
library(tidyr)
library(lubridate)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
converted_data <- mutate(df_data, time =  as.POSIXct(strptime(Time,format =("%T%H:%M:%S"))), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(data_base)
View(converted_data)
converted_data <- mutate(df_data, time =  as.POSIXct(strptime(Time,format =("%T%H:%M:%S"))), date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
###data_base is the converted by strptime(), as.Date())
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(converted_data$time)
###Welcome to my assignment###
###thank u for reviewing###
library(dplyr)
library(tidyr)
library(datasets)
library(lubridate)
library(ggplot2)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
converted_data <- mutate(df_data, time = hms(Time)  , date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
selected_data <- filter(.data = data_base , date[]== c(date("2007-02-01"), date("2007-02-02")))
##############
##############
with(selected_data, hist(x= as.numeric(Global_active_power),col = "red",main = "Global Active Power", xlab = "Global Acitive Power(kilowatts)"))
png(filename = "plot1.png", width = 480, height = 480)
dev.copy(png, file = "plot1.png")
dev.off()
#############
with(selected_data, plot(x= date + time, y = as.numeric(Global_active_power), type = "l" , ylab = "Global Acitive Power(kilowatts)", xlab = ""))
png(filename = "plot2.png", width = 480, height = 480)
dev.copy(png, file = "plot2.png")
dev.off()
############
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
png(filename = "plot3.png", width = 480, height = 480)
dev.copy(png, file = "plot3.png")
dev.off()
###########
?par
###Welcome to my assignment###
###thank u for reviewing###
library(dplyr)
library(tidyr)
library(datasets)
library(lubridate)
library(ggplot2)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
converted_data <- mutate(df_data, time = hms(Time)  , date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
selected_data <- filter(.data = data_base , date[]== c(date("2007-02-01"), date("2007-02-02")))
##############
##############
par(mfrow = c(1,1))
with(selected_data, hist(x= as.numeric(Global_active_power),col = "red",main = "Global Active Power", xlab = "Global Acitive Power(kilowatts)"))
png(filename = "plot1.png", width = 480, height = 480)
dev.copy(png, file = "plot1.png")
dev.off()
#############
with(selected_data, plot(x= date + time, y = as.numeric(Global_active_power), type = "l" , ylab = "Global Acitive Power(kilowatts)", xlab = ""))
png(filename = "plot2.png", width = 480, height = 480)
dev.copy(png, file = "plot2.png")
dev.off()
############
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
png(filename = "plot3.png", width = 480, height = 480)
dev.copy(png, file = "plot3.png")
dev.off()
###########
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power"), xlab = "datetime")
png(filename = "plot4.png",width = 480, height = 480)
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
png(filename = "plot4.png",width = 480, height = 480)
dev.copy(png, file = "plot4.png")
dev.off()
setwd("~/GitHub/R_learning/C3_W1")
###Welcome to my assignment###
###thank u for reviewing###
library(dplyr)
library(tidyr)
library(datasets)
library(lubridate)
library(ggplot2)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
converted_data <- mutate(df_data, time = hms(Time)  , date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
selected_data <- filter(.data = data_base , date[]== c(date("2007-02-01"), date("2007-02-02")))
##############
##############
par(mfrow = c(1,1))
with(selected_data, hist(x= as.numeric(Global_active_power),col = "red",main = "Global Active Power", xlab = "Global Acitive Power(kilowatts)"))
dev.copy(png, file = "plot1.png")
dev.off()
#############
with(selected_data, plot(x= date + time, y = as.numeric(Global_active_power), type = "l" , ylab = "Global Acitive Power(kilowatts)", xlab = ""))
dev.copy(png, file = "plot2.png")
dev.off()
############
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
dev.copy(png, file = "plot3.png")
dev.off()
###########
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
dev.copy(png, file = "plot4.png")
dev.off()
setwd("~/GitHub/R_learning/C3_W1")
setwd("~/GitHub/R_learning/C3_W1")
###Welcome to my assignment###
###thank u for reviewing###
library(dplyr)
library(tidyr)
library(datasets)
library(lubridate)
library(ggplot2)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
converted_data <- mutate(df_data, time = hms(Time)  , date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
selected_data <- filter(.data = data_base , date[]== c(date("2007-02-01"), date("2007-02-02")))
###########
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
dev.copy(png, file = "plot4.png")
###Welcome to my assignment###
###thank u for reviewing###
library(dplyr)
library(tidyr)
library(datasets)
library(lubridate)
library(ggplot2)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
converted_data <- mutate(df_data, time = hms(Time)  , date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
selected_data <- filter(.data = data_base , date[]== c(date("2007-02-01"), date("2007-02-02")))
###########
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
dev.copy(png, file = "plot4.png")
dev.off()
###Welcome to my assignment###
###thank u for reviewing###
library(dplyr)
library(tidyr)
library(datasets)
library(lubridate)
library(ggplot2)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
converted_data <- mutate(df_data, time = hms(Time)  , date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
selected_data <- filter(.data = data_base , date[]== c(date("2007-02-01"), date("2007-02-02")))
###########
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
dev.copy(png, file = "plot4.png")
dev.off()
setwd("~/GitHub/ExData_Plotting1")
setwd("~/GitHub/ExData_Plotting1")
###Welcome to my assignment###
###thank u for reviewing###
library(dplyr)
library(tidyr)
library(datasets)
library(lubridate)
library(ggplot2)
df_data <- read.table(file = "C:/Users/tallg/Documents/GitHub/R_learning/C3_W1/household_power_consumption.txt", header = F,skip = 1, sep = ";", stringsAsFactors = F,col.names = c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
converted_data <- mutate(df_data, time = hms(Time)  , date = as.Date.character(x= df_data$Date, format="%d/%m/%Y" ))
data_base <- select(converted_data, c("date","time","Global_active_power","Global_reactive_power","Voltage","Global_intensity","Sub_metering_1","Sub_metering_2","Sub_metering_3"))
###############
###############
selected_data <- filter(.data = data_base , date[]== c(date("2007-02-01"), date("2007-02-02")))
###########
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
dev.copy(png, file = "plot4.png")
dev.off()
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, col=c("black", "red", "blue"))
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, col=c("black", "red", "blue"))
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
dev.copy(png, file = "plot4.png")
dev.off()
?parse_date_time
?legend
png(filename = "plot4.png", width = 480, height = 480)
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, col=c("black", "red", "blue"))
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(2,2))
with(selected_data, plot( x = date + time , y = as.numeric(Global_active_power), ylab = "Global Acitve Power",type = "l"))
with(selected_data, plot( x = date + time , y = as.numeric(Voltage), ylab = "Voltage",type = "l"))
with(selected_data, plot(x= date + time, y = as.numeric(Sub_metering_1),col = "black", type = "l" , ylab = "Energy sub metering", xlab = ""))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_2),col = "red"))
with(selected_data, lines(x = date + time , y = as.numeric(Sub_metering_3),col = "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, col=c("black", "red", "blue"))
with(selected_data, plot( x = date + time , y = as.numeric(Global_reactive_power), ylab = "Global_reactive_power",type = "l", xlab = "datetime"))
dev.copy(png, file = "plot4.png", width = 480, height = 480)
dev.off()
###############
###############
selected_data <- filter(.data = data_base , date[]== c(date("2007-02-01"), date("2007-02-02")))
with(selected_data, hist(x= as.numeric(Global_active_power),col = "red",main = "Global Active Power", xlab = "Global Acitive Power(kilowatts)"))
dev.copy(png, file = "plot1.png", width = 480, height = 480)
dev.off()
